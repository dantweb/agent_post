name: CI/CD Pipeline

on:
  push:
    branches:
      - production

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create Docker Network
        run: |
          docker network ls | grep "shared_network" || docker network create shared_network

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Git credentials for HTTPS cloning
        run: |
          git config --global credential.helper store
          echo "https://${{ github.actor }}:${{ secrets.DANTWEB_DEPLOY_TOKEN }}@github.com" > ~/.git-credentials

      - name: Download git repo
        run: |
          git clone https://github.com/dantweb/agent_post.git agent_post

      - name: Install dependencies and build Docker containers
        run: |
          cd agent_post
          #run Dockerfile to build and prepare containers locally
          docker build -t agent_post:latest .

      - name: Prepare SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
           mkdir -p .ssh
           echo "${{ secrets.SSH_PRIVATE_KEY }}" > .ssh/id_rsa
           echo "${{ secrets.SSH_PUBLIC_KEY }}" > .ssh/id_rsa.pub
           chmod 600 .ssh/id_rsa
           ssh-keyscan github.com > .ssh/known_hosts

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.AGENT_POST_DEPLOY }}

      - name: Build and Push Backend Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/agent_post:latest ./agent_post
          docker push ghcr.io/${{ github.repository_owner }}/agent_post:latest
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Clone or update repo on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /home/${{ secrets.SERVER_USERNAME }}/web_server
            cd /home/${{ secrets.SERVER_USERNAME }}/web_server
            if [ -d agent_post ]; then
              cd agent_post
              if [ -d .git ]; then
                git fetch --all --prune
                git reset --hard origin/production
              else
                git init
                git remote add origin https://github.com/${{ github.repository_owner }}/agent_post.git
                git fetch --depth=1 origin production
                git reset --hard FETCH_HEAD
              fi
            else
              git clone https://github.com/${{ github.repository_owner }}/agent_post.git agent_post
              cd agent_post
            fi

      - name: Upload docker-compose.yml with CITY_API_URL
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cat <<EOF > /home/${{ secrets.SERVER_USERNAME }}/web_server/agent_post/docker-compose.yml
            version: '3.8'
            services:
              agent_post:
                build:
                  context: .
                  dockerfile: Dockerfile
                image: ghcr.io/${{ github.repository_owner }}/agent_post:latest
                networks:
                  - shared_network
                environment:
                  - CITY_API_URL=${{ secrets.CITY_API_URL }}
                restart: always

            networks:
              shared_network:
                external: true
            EOF

      - name: Ensure Docker network exists
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker network ls | grep "shared_network" || docker network create shared_network

      - name: Run docker compose to start app
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USERNAME }}/web_server/agent_post
            docker compose up -d